<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>膳食营养计算工具</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            font-family: 'Microsoft YaHei', sans-serif;
        }
        
        body {
            background-color: #f5f7fa;
            color: #333;
            line-height: 1.6;
            padding: 20px;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }
        
        header {
            background: linear-gradient(135deg, #4b6cb7, #182848);
            color: white;
            padding: 20px;
            text-align: center;
        }
        
        h1 {
            font-size: 28px;
            margin-bottom: 10px;
        }
        
        .section {
            padding: 30px;
            border-bottom: 1px solid #eaeaea;
        }
        
        .section-title {
            background-color: #f0f5ff;
            padding: 10px 15px;
            margin: -20px -20px 20px -20px;
            font-size: 18px;
            color: #2c3e50;
            border-left: 4px solid #4b6cb7;
        }
        
        .input-group {
            display: flex;
            flex-wrap: wrap;
            gap: 15px;
            margin-bottom: 15px;
        }
        
        .input-item {
            flex: 1 1 200px;
            min-width: 200px;
        }
        
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
            color: #2c3e50;
        }
        
        input, select {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 16px;
        }
        
        button {
            background: linear-gradient(135, #4b6cb7, #182848);
            color: white;
            border: none;
            padding: 12px 25px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            font-weight: bold;
            transition: all 0.3s;
            display: block;
            margin: 20px auto;
        }
        
        button:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }
         .btn-primary {
            background: #1a6e9a;
            padding: 15px 30px;
        }
        
        .calculation-steps {
            background-color: #f9f9f9;
            padding: 20px;
            border-radius: 5px;
            margin-top: 20px;
            font-family: monospace;
            white-space: pre-wrap;
        }
        
        .food-categories {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 15px;
            margin-top: 20px;
        }
        
        .food-category {
            background: #f8f9fa;
            padding: 15px;
            border-radius: 5px;
            border-left: 4px solid #4b6cb7;
        }
        
        .summary {
            background: #e8f4ff;
            padding: 20px;
            border-radius: 5px;
            margin-top: 20px;
            position: relative;
        }
        
        .summary-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 15px;
        }
        
        .summary-item {
            background: white;
            padding: 15px;
            border-radius: 5px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        }
        
        .nutrient-bar {
            height: 20px;
            background: #e0e0e0;
            border-radius: 10px;
            margin-top: 5px;
            overflow: hidden;
        }
        
        .nutrient-fill {
            height: 100%;
            border-radius: 10px;
        }
        
        .protein-fill {
            background: #4b6cb7;
        }
        
        .fat-fill {
            background: #f39c12;
        }
        
        .carb-fill {
            background: #27ae60;
        }
        
        .report-btn {
            background: linear-gradient(135deg, #27ae60, #219653);
            margin-top: 30px;
        }
        
        .food-group-title {
            background-color: #4b6cb7;
            color: white;
            padding: 5px 10px;
            border-radius: 4px;
            margin-top: 10px;
            font-weight: bold;
        }
        
        .global-recalc-btn {
            background: #1a6e9a;
            margin-top: 20px;
        }
        
        /* 新增的图片预览样式 */
        .image-preview-container {
            margin-top: 20px;
            padding: 15px;
            background-color: #f8f9fa;
            border-radius: 5px;
            border: 1px dashed #ddd;
        }
        
        .preview-heading {
            font-size: 18px;
            margin-bottom: 10px;
            color: #2c3e50;
            text-align: center;
        }
        
        .preview-image {
            width: 100%;
            max-width: 600px;
            margin: 0 auto 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
            display: block;
            background-color: white;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        
        .preview-btn-group {
            display: flex;
            justify-content: center;
            gap: 15px;
            margin-top: 10px;
            flex-wrap: wrap;
        }
        
        .preview-btn {
            padding: 10px 20px;
            border-radius: 4px;
            cursor: pointer;
            font-weight: bold;
            transition: all 0.2s;
            border: none;
            min-width: 150px;
        }
        
        .generate-btn {
            background: linear-gradient(135deg, #3498db, #2980b9);
            color: white;
        }
        
        .download-btn {
            background: linear-gradient(135deg, #27ae60, #219653);
            color: white;
        }
        
        .preview-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        
        @media (max-width: 768px) {
            .input-group {
                flex-direction: column;
            }
            
            .input-item {
                flex: 1 1 100%;
            }
            
            .preview-btn-group {
                flex-direction: column;
                align-items: center;
            }
            
            .preview-btn {
                width: 100%;
                margin-bottom: 10px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>膳食营养计算工具</h1>
            <p>计算各类食物推荐摄入量</p>
        </header>
        
        <!-- 板块一：输入总能量和营养素比例 -->
        <div class="section">
            <div class="section-title">能量需求及营养素供能比例</div>
            <div class="input-group">
                <div class="input-item">
                    <label for="totalEnergy">总能量需求 (kcal)</label>
                    <input type="number" id="totalEnergy" placeholder="例如：1800" min="0">
                </div>
                <div class="input-item">
                    <label for="proteinRatio">蛋白质供能比例 (%)</label>
                    <input type="number" id="proteinRatio" placeholder="例如：20" min="0" max="100">
                </div>
                <div class="input-item">
                    <label for="fatRatio">脂肪供能比例 (%)</label>
                    <input type="number" id="fatRatio" placeholder="例如：30" min="0" max="100">
                </div>
                <div class="input-item">
                    <label for="carbRatio">碳水化合物供能比例 (%)</label>
                    <input type="number" id="carbRatio" placeholder="例如：50" min="0" max="100">
                </div>
            </div>
        </div>
        
        <!-- 板块二：固定食物输入 -->
        <div class="section">
            <div class="section-title">常用食物推荐摄入量 (g)</div>
            <div class="input-group">
                <div class="input-item">
                    <label for="fixedGrains">谷薯类</label>
                    <input type="number" id="fixedGrains" min="0" value="0">
                </div>
                <div class="input-item">
                    <label for="fixedVege">蔬菜类</label>
                    <input type="number" id="fixedVege" min="0" value="0">
                </div>
                <div class="input-item">
                    <label for="fixedFruit">水果类</label>
                    <input type="number" id="fixedFruit" min="0" value="0">
                </div>
                <div class="input-item">
                    <label for="fixedMeat">肉蛋类</label>
                    <input type="number" id="fixedMeat" min="0" value="0">
                </div>
                <div class="input-item">
                    <label for="fixedBean">大豆类</label>
                    <input type="number" id="fixedBean" min="0" value="0">
                </div>
                <div class="input-item">
                    <label for="fixedMilk">鲜奶类</label>
                    <input type="number" id="fixedMilk" min="0" value="0">
                </div>
                <div class="input-item">
                    <label for="fixedNut">坚果类</label>
                    <input type="number" id="fixedNut" min="0" value="0">
                </div>
                <div class="input-item">
                    <label for="fixedOil">油脂类</label>
                    <input type="number" id="fixedOil" min="0" value="0">
                </div>
            </>
        </div>
        
        <button id="calculateBtn" class="btn-primary">计算推荐摄入量</button>
        
        <!-- 板块三：计算步骤 -->
        <div class="section">
            <div class="section-title">计算步骤</div>
            <div class="calculation-steps" id="calculationSteps">
                请先输入患者信息并点击计算按钮...
            </div>
        </div>
        
        <!-- 板块四：各类食物重量输出 -->
        <div class="section">
            <div class="section-title">各类食物推荐摄入量 (g)</div>
            <div class="food-categories">
                <div class="food-category">
                    <label for="totalGrains">谷薯类</label>
                    <input type="number" id="totalGrains" min="0" readonly>
                </div>
                <div class="food-category">
                    <label for="totalVege">蔬菜类</label>
                    <input type="number" id="totalVege" min="0" readonly>
                </div>
                <div class="food-category">
                    <label for="totalFruit">水果类</label>
                    <input type="number" id="totalFruit" min="0" readonly>
                </div>
                <div class="food-category">
                    <label for="totalMeat">肉蛋类</label>
                    <input type="number" id="totalMeat" min="0" readonly>
                </div>
                <div class="food-category">
                    <label for="totalBean">大豆类</label>
                    <input type="number" id="totalBean" min="0" readonly>
                </div>
                <div class="food-category">
                    <label for="totalMilk">鲜奶类</label>
                    <input type="number" id="totalMilk" min="0" readonly>
                </div>
                <div class="food-category">
                    <label for="totalNut">坚果类</label>
                    <input type="number" id="totalNut" min="0" readonly>
                </div>
                <div class="food-category">
                    <label for="totalOil">油脂类</label>
                    <input type="number" id="totalOil" min="0" readonly>
                </div>
            </div>
        </div>
        
        <!-- 板块五：手动调整 -->
        <div class="section">
            <div class="section-title">手动调整摄入量 (g)</div>
            <div class="food-categories">
                <div class="food-category">
                    <label for="adjustGrains">谷薯类</label>
                    <input type="number" id="adjustGrains" min="0">
                </div>
                <div class="food-category">
                    <label for="adjustVege">蔬菜类</label>
                    <input type="number" id="adjustVege" min="0">
                </div>
                <div class="food-category">
                    <label for="adjustFruit">水果类</label>
                    <input type="number" id="adjustFruit" min="0">
                </div>
                <div class="food-category">
                    <label for="adjustMeat">肉蛋类</label>
                    <input type="number" id="adjustMeat" min="0">
                </div>
                <div class="food-category">
                    <label for="adjustBean">大豆类</label>
                    <input type="number" id="adjustBean" min="0">
                </div>
                <div class="food-category">
                    <label for="adjustMilk">鲜奶类</label>
                    <input type="number" id="adjustMilk" min="0">
                </div>
                <div class="food-category">
                    <label for="adjustNut">坚果类</label>
                    <input type="number" id="adjustNut" min="0">
                </div>
                <div class="food-category">
                    <label for="adjustOil">油脂类</label>
                    <input type="number" id="adjustOil" min="0">
                </div>
            </div>
            <!-- 全局重新计算按钮 -->
            <button id="globalRecalcBtn" class="global-recalc-btn">全局重新计算营养素</button>
        </div>
        
        <!-- 板块六：总结报告 -->
        <div class="section">
            <div class="section-title">报告</div>
            <div class="summary" id="reportSection">
                <div class="summary-grid">
                    <div class="summary-item">
                        <h3>总能量与营养素</h3>
                        <p>目标总能量: <span id="targetEnergy">0</span> kcal</p>
                        <p>实际总能量: <span id="actualEnergy">0</span> kcal</p>
                        <p>食物总份数: <span id="totalPortions">0</span> 份</p>
                    </div>
                    
                    <div class="summary-item">
                        <h3>蛋白质</h3>
                        <p>目标: <span id="targetProtein">0</span> g (<span id="targetProteinPct">0</span>%)</p>
                        <p>实际: <span id="actualProtein">0</span> g (<span id="actualProteinPct">0</span>%)</p>
                        <div class="nutrient-bar">
                            <div class="nutrient-fill protein-fill" id="proteinBar" style="width: 0%"></div>
                        </div>
                    </div>
                    
                    <div class="summary-item">
                        <h3>脂肪</h3>
                        <p>目标: <span id="targetFat">0</span> g (<span id="targetFatPct">0</span>%)</p>
                        <p>实际: <span id="actualFat">0</span> g (<span id="actualFatPct">0</span>%)</p>
                        <div class="nutrient-bar">
                            <div class="nutrient-fill fat-fill" id="fatBar" style="width: 0%"></div>
                        </div>
                    </div>
                    
                    <div class="summary-item">
                        <h3>碳水化合物</h3>
                        <p>目标: <span id="targetCarb">0</span> g (<span id="targetCarbPct">0</span>%)</p>
                        <p>实际: <span id="actualCarb">0</span> g (<span id="actualCarbPct">0</span>%)</p>
                        <div class="nutrient-bar">
                            <div class="nutrient-fill carb-fill" id="carbBar" style="width: 0%"></div>
                        </div>
                    </div>
                </div>
                
                <div class="summary-item" style="margin-top: 20px;">
                    <h3>各类食物摄入量</h3>
                    <p>谷薯类: <span id="summaryGrains">0</span> g</p>
                    <p>蔬菜类: <span id="summaryVege">0</span> g</p>
                    <p>水果类: <span id="summaryFruit">0</span> g</p>
                    <p>肉蛋类: <span id="summaryMeat">0</span> g</p>
                    <p>大豆类: <span id="summaryBean">0</span> g</p>
                    <p>鲜奶类: <span id="summaryMilk">0</span> g</p>
                    <p>坚果类: <span id="summaryNut">0</span> g</p>
                    <p>油脂类: <span id="summaryOil">0</span> g</p>
                </div>
            </div>
        </div>
        
        <!-- 板块七：报告导出 -->
        <div class="section">
            <div class="section-title">报告导出</div>
            <div class="image-preview-container">
                <div class="preview-heading">报告图片预览</div>
                <img id="reportImage" class="preview-image" src="" alt="营养报告预览图">
                <div class="preview-btn-group">
                    <button id="generateImageBtn" class="preview-btn generate-btn">生成预览图片</button>
                    <button id="downloadImageBtn" class="preview-btn download-btn">下载图片</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        // 食物数据（每份90kcal）
        const foodData = {
            grains: { mass: 25, protein: 2.0, carb: 20.0, fat: 0 },
            vege: { mass: 500, protein: 5.0, carb: 17.0, fat: 0 },
            fruit: { mass: 200, protein: 1.0, carb: 21.0, fat: 0 },
            meat: { mass: 50, protein: 9.0, carb: 0, fat: 6.0 },
            bean: { mass: 25, protein: 9.0, carb: 4.0, fat: 4.0 },
            milk: { mass: 160, protein: 5.0, carb: 6.0, fat: 5.0 },
            nut: { mass: 15, protein: 4.0, carb: 2.0, fat: 7.0 },
            oil: { mass: 10, protein: 0, carb: 0, fat: 10.0 }
        };

        // 获取DOM元素
        const calculateBtn = document.getElementById('calculateBtn');
        const globalRecalcBtn = document.getElementById('globalRecalcBtn');
        const calculationSteps = document.getElementById('calculationSteps');
        const generateImageBtn = document.getElementById('generateImageBtn');
        const downloadImageBtn = document.getElementById('downloadImageBtn');
        const reportImage = document.getElementById('reportImage');
        
        // 添加事件监听器
        calculateBtn.addEventListener('click', calculateNutrition);
        globalRecalcBtn.addEventListener('click', recalculateNutrients);
        generateImageBtn.addEventListener('click', generateImagePreview);
        downloadImageBtn.addEventListener('click', downloadImage);
        
        // 计算营养需求
        function calculateNutrition() {
            // 获取输入值
            const totalEnergy = parseFloat(document.getElementById('totalEnergy').value) || 0;
            const proteinRatio = parseFloat(document.getElementById('proteinRatio').value) || 0;
            const fatRatio = parseFloat(document.getElementById('fatRatio').value) || 0;
            const carbRatio = parseFloat(document.getElementById('carbRatio').value) || 0;
            
            // 验证比例总和
            if (proteinRatio + fatRatio + carbRatio !== 100) {
                alert('蛋白质、脂肪和碳水化合物的比例总和必须为100%');
                return;
            }
            
            // 计算三大营养素总需要量
            const proteinTotal = (totalEnergy * proteinRatio / 100) / 4;
            const fatTotal = (totalEnergy * fatRatio / 100) / 9;
            const carbTotal = (totalEnergy * carbRatio / 100) / 4;
            
            // 计算总食物份数
            const totalPortions = totalEnergy / 90;
            
            // 显示计算步骤
            let steps = `1. 根据总能量和营养素比例计算三大营养素总需要量（克）及总食物份数：\n`;
            steps += `   总能量 = ${totalEnergy} kcal\n`;
            steps += `   蛋白质 = (${totalEnergy} × ${proteinRatio}%) / 4 = ${proteinTotal.toFixed(2)} g\n`;
            steps += `   脂肪 = (${totalEnergy} × ${fatRatio}%) / 9 = ${fatTotal.toFixed(2)} g\n`;
            steps += `   碳水化合物 = (${totalEnergy} × ${carbRatio}%) / 4 = ${carbTotal.toFixed(2)} g\n`;
            steps += `   总食物份数 = ${totalEnergy} / 90 = ${totalPortions.toFixed(2)} 份\n\n`;
            
            // 获取固定食物输入值
            const fixedGrains = parseFloat(document.getElementById('fixedGrains').value) || 0;
            const fixedVege = parseFloat(document.getElementById('fixedVege').value) || 0;
            const fixedFruit = parseFloat(document.getElementById('fixedFruit').value) || 0;
            const fixedMeat = parseFloat(document.getElementById('fixedMeat').value) || 0;
            const fixedBean = parseFloat(document.getElementById('fixedBean').value) || 0;
            const fixedMilk = parseFloat(document.getElementById('fixedMilk').value) || 0;
            const fixedNut = parseFloat(document.getElementById('fixedNut').value) || 0;
            const fixedOil = parseFloat(document.getElementById('fixedOil').value) || 0;
            
            // 计算固定食物提供的营养素
            const fixedPortions = {
                grains: fixedGrains / foodData.grains.mass,
                vege: fixedVege / foodData.vege.mass,
                fruit: fixedFruit / foodData.fruit.mass,
                meat: fixedMeat / foodData.meat.mass,
                bean: fixedBean / foodData.bean.mass,
                milk: fixedMilk / foodData.milk.mass,
                nut: fixedNut / foodData.nut.mass,
                oil: fixedOil / foodData.oil.mass
            };
            
            const fixedProtein = 
                fixedPortions.grains * foodData.grains.protein +
                fixedPortions.vege * foodData.vege.protein +
                fixedPortions.fruit * foodData.fruit.protein +
                fixedPortions.meat * foodData.meat.protein +
                fixedPortions.bean * foodData.bean.protein +
                fixedPortions.milk * foodData.milk.protein +
                fixedPortions.nut * foodData.nut.protein +
                fixedPortions.oil * foodData.oil.protein;
                
            const fixedFat = 
                fixedPortions.grains * foodData.grains.fat +
                fixedPortions.vege * foodData.vege.fat +
                fixedPortions.fruit * foodData.fruit.fat +
                fixedPortions.meat * foodData.meat.fat +
                fixedPortions.bean * foodData.bean.fat +
                fixedPortions.milk * foodData.milk.fat +
                fixedPortions.nut * foodData.nut.fat +
                fixedPortions.oil * foodData.oil.fat;
                
            const fixedCarb = 
                fixedPortions.grains * foodData.grains.carb +
                fixedPortions.vege * foodData.vege.carb +
                fixedPortions.fruit * foodData.fruit.carb +
                fixedPortions.meat * foodData.meat.carb +
                fixedPortions.bean * foodData.bean.carb +
                fixedPortions.milk * foodData.milk.carb +
                fixedPortions.nut * foodData.nut.carb +
                fixedPortions.oil * foodData.oil.carb;
            
            steps += `2. 计算固定食物提供的营养素：\n`;
            steps += `   固定食物提供的蛋白质 = ${fixedProtein.toFixed(2)} g\n`;
            steps += `   固定食物提供的脂肪 = ${fixedFat.toFixed(2)} g\n`;
            steps += `   固定食物提供的碳水化合物 = ${fixedCarb.toFixed(2)} g\n\n`;
            
            // 计算谷薯类份数
            const grainsPortions = (carbTotal - fixedCarb) / foodData.grains.carb;
            const grainsMass = grainsPortions * foodData.grains.mass;
            const grainsProtein = grainsPortions * foodData.grains.protein;
            
            steps += `3. 计算每日所需的谷薯类份数及质量：\n`;
            steps += `   谷薯类份数 = (总碳水 ${carbTotal.toFixed(2)} - 固定碳水 ${fixedCarb.toFixed(2)}) / 20 = ${grainsPortions.toFixed(2)} 份\n`;
            steps += `   谷薯类质量 = ${grainsPortions.toFixed(2)} × 25 = ${Math.round(grainsMass)} g\n`;
            steps += `   谷薯类提供的蛋白质 = ${grainsProtein.toFixed(2)} g\n\n`;
            
            // 计算蛋白质类份数
            const proteinPortions = (proteinTotal - fixedProtein - grainsProtein) / 
                                  ((foodData.meat.protein + foodData.bean.protein) / 2);
            const meatPortions = proteinPortions * 0.5;
            const beanPortions = proteinPortions * 0.5;
            const meatMass = meatPortions * foodData.meat.mass;
            const beanMass = beanPortions * foodData.bean.mass;
            
            steps += `4. 计算蛋白质类（肉蛋组和大豆类）份数及质量：\n`;
            steps += `   蛋白质类份数 = (总蛋白质 ${proteinTotal.toFixed(2)} - 固定蛋白质 ${fixedProtein.toFixed(2)} - 谷薯类蛋白质 ${grainsProtein.toFixed(2)}) / 9 = ${proteinPortions.toFixed(2)} 份\n`;
            steps += `   肉蛋类份数 = ${proteinPortions.toFixed(2)} × 0.5 = ${meatPortions.toFixed(2)} 份\n`;
            steps += `   肉蛋类质量 = ${meatPortions.toFixed(2)} × 50 = ${Math.round(meatMass)} g\n`;
            steps += `   大豆类份数 = ${proteinPortions.toFixed(2)} × 0.5 = ${beanPortions.toFixed(2)} 份\n`;
            steps += `   大豆类质量 = ${beanPortions.toFixed(2)} × 25 = ${Math.round(beanMass)} g\n\n`;
            
            // 计算纯能量组份数
            const fixedPortionsTotal = 
                fixedPortions.grains + fixedPortions.vege + fixedPortions.fruit + 
                fixedPortions.meat + fixedPortions.bean + fixedPortions.milk + 
                fixedPortions.nut + fixedPortions.oil;
                
            const energyPortions = totalPortions - fixedPortionsTotal - grainsPortions - proteinPortions;
            const nutPortions = energyPortions * 0.5;
            const oilPortions = energyPortions * 0.5;
            const nutMass = nutPortions * foodData.nut.mass;
            const oilMass = oilPortions * foodData.oil.mass;
            
            steps += `5. 计算纯能量组份数及质量：\n`;
            steps += `   纯能量组份数 = 总份数 ${totalPortions.toFixed(2)} - 固定食物份数 ${fixedPortionsTotal.toFixed(2)} - 谷薯类份数 ${grainsPortions.toFixed(2)} - 蛋白质类份数 ${proteinPortions.toFixed(2)} = ${energyPortions.toFixed(2)} 份\n`;
            steps += `   坚果类份数 = ${energyPortions.toFixed(2)} × 0.5 = ${nutPortions.toFixed(2)} 份\n`;
            steps += `   坚果类质量 = ${nutPortions.toFixed(2)} × 15 = ${Math.round(nutMass)} g\n`;
            steps += `   油脂类份数 = ${energyPortions.toFixed(2)} × 0.5 = ${oilPortions.toFixed(2)} 份\n`;
            steps += `   油脂类质量 = ${oilPortions.toFixed(2)} × 10 = ${Math.round(oilMass)} g\n\n`;
            
            // 计算各类食物总质量
            const totalGrains = fixedGrains + Math.round(grainsMass);
            const totalVege = fixedVege;
            const totalFruit = fixedFruit;
            const totalMeat = fixedMeat + Math.round(meatMass);
            const totalBean = fixedBean + Math.round(beanMass);
            const totalMilk = fixedMilk;
            const totalNut = fixedNut + Math.round(nutMass);
            const totalOil = fixedOil + Math.round(oilMass);
            
            steps += `6. 计算各类食物总质量：\n`;
            steps += `   谷薯类 = 固定 ${fixedGrains} + 计算 ${Math.round(grainsMass)} = ${totalGrains} g\n`;
            steps += `   蔬菜类 = ${totalVege} g\n`;
            steps += `   水果类 = ${totalFruit} g\n`;
            steps += `   肉蛋类 = 固定 ${fixedMeat} + 计算 ${Math.round(meatMass)} = ${totalMeat} g\n`;
            steps += `   大豆类 = 固定 ${fixedBean} + 计算 ${Math.round(beanMass)} = ${totalBean} g\n`;
            steps += `   鲜奶类 = ${totalMilk} g\n`;
            steps += `   坚果类 = 固定 ${fixedNut} + 计算 ${Math.round(nutMass)} = ${totalNut} g\n`;
            steps += `   油脂类 = 固定 ${fixedOil} + 计算 ${Math.round(oilMass)} = ${totalOil} g`;
            
            // 显示计算步骤
            calculationSteps.textContent = steps;
            
            // 设置板块四的输出值
            document.getElementById('totalGrains').value = totalGrains;
            document.getElementById('totalVege').value = totalVege;
            document.getElementById('totalFruit').value = totalFruit;
            document.getElementById('totalMeat').value = totalMeat;
            document.getElementById('totalBean').value = totalBean;
            document.getElementById('totalMilk').value = totalMilk;
            document.getElementById('totalNut').value = totalNut;
            document.getElementById('totalOil').value = totalOil;
            
            // 设置板块五的初始值
            document.getElementById('adjustGrains').value = totalGrains;
            document.getElementById('adjustVege').value = totalVege;
            document.getElementById('adjustFruit').value = totalFruit;
            document.getElementById('adjustMeat').value = totalMeat;
            document.getElementById('adjustBean').value = totalBean;
            document.getElementById('adjustMilk').value = totalMilk;
            document.getElementById('adjustNut').value = totalNut;
            document.getElementById('adjustOil').value = totalOil;
            
            // 更新总结报告
            recalculateNutrients();
        }
        
        // 重新计算营养素
        function recalculateNutrients() {
            // 获取目标值
            const totalEnergy = parseFloat(document.getElementById('totalEnergy').value) || 0;
            const proteinRatio = parseFloat(document.getElementById('proteinRatio').value) || 0;
            const fatRatio = parseFloat(document.getElementById('fatRatio').value) || 0;
            const carbRatio = parseFloat(document.getElementById('carbRatio').value) || 0;
            
            // 计算目标营养素
            const targetProtein = (totalEnergy * proteinRatio / 100) / 4;
            const targetFat = (totalEnergy * fatRatio / 100) / 9;
            const targetCarb = (totalEnergy * carbRatio / 100) / 4;
            
            // 获取调整后的食物量
            const adjGrains = parseFloat(document.getElementById('adjustGrains').value) || 0;
            const adjVege = parseFloat(document.getElementById('adjustVege').value) || 0;
            const adjFruit = parseFloat(document.getElementById('adjustFruit').value) || 0;
            const adjMeat = parseFloat(document.getElementById('adjustMeat').value) || 0;
            const adjBean = parseFloat(document.getElementById('adjustBean').value) || 0;
            const adjMilk = parseFloat(document.getElementById('adjustMilk').value) || 0;
            const adjNut = parseFloat(document.getElementById('adjustNut').value) || 0;
            const adjOil = parseFloat(document.getElementById('adjustOil').value) || 0;
            
            // 计算调整后的营养素
            const actualProtein = 
                (adjGrains / foodData.grains.mass * foodData.grains.protein) +
                (adjVege / foodData.vege.mass * foodData.vege.protein) +
                (adjFruit / foodData.fruit.mass * foodData.fruit.protein) +
                (adjMeat / foodData.meat.mass * foodData.meat.protein) +
                (adjBean / foodData.bean.mass * foodData.bean.protein) +
                (adjMilk / foodData.milk.mass * foodData.milk.protein) +
                (adjNut / foodData.nut.mass * foodData.nut.protein) +
                (adjOil / foodData.oil.mass * foodData.oil.protein);
                
            const actualFat = 
                (adjGrains / foodData.grains.mass * foodData.grains.fat) +
                (adjVege / foodData.vege.mass * foodData.vege.fat) +
                (adjFruit / foodData.fruit.mass * foodData.fruit.fat) +
                (adjMeat / foodData.meat.mass * foodData.meat.fat) +
                (adjBean / foodData.bean.mass * foodData.bean.fat) +
                (adjMilk / foodData.milk.mass * foodData.milk.fat) +
                (adjNut / foodData.nut.mass * foodData.nut.fat) +
                (adjOil / foodData.oil.mass * foodData.oil.fat);
                
            const actualCarb = 
                (adjGrains / foodData.grains.mass * foodData.grains.carb) +
                (adjVege / foodData.vege.mass * foodData.vege.carb) +
                (adjFruit / foodData.fruit.mass * foodData.fruit.carb) +
                (adjMeat / foodData.meat.mass * foodData.meat.carb) +
                (adjBean / foodData.bean.mass * foodData.bean.carb) +
                (adjMilk / foodData.milk.mass * foodData.milk.carb) +
                (adjNut / foodData.nut.mass * foodData.nut.carb) +
                (adjOil / foodData.oil.mass * foodData.oil.carb);
            
            // 计算实际总能量
            const actualEnergy = (actualProtein * 4) + (actualFat * 9) + (actualCarb * 4);
            
            // 计算各类食物的份数（用于显示总份数）
            const totalPortions = 
                (adjGrains / foodData.grains.mass) +
                (adjVege / foodData.vege.mass) +
                (adjFruit / foodData.fruit.mass) +
                (adjMeat / foodData.meat.mass) +
                (adjBean / foodData.bean.mass) +
                (adjMilk / foodData.milk.mass) +
                (adjNut / foodData.nut.mass) +
                (adjOil / foodData.oil.mass);
            
            // 计算营养素比例
            const actualProteinPct = actualProtein * 4 / actualEnergy * 100;
            const actualFatPct = actualFat * 9 / actualEnergy * 100;
            const actualCarbPct = actualCarb * 4 / actualEnergy * 100;
            
            // 更新总结报告
            document.getElementById('targetEnergy').textContent = totalEnergy;
            document.getElementById('actualEnergy').textContent = actualEnergy.toFixed(0);
            document.getElementById('totalPortions').textContent = totalPortions.toFixed(2);
            
            document.getElementById('targetProtein').textContent = targetProtein.toFixed(1);
            document.getElementById('targetProteinPct').textContent = proteinRatio;
            document.getElementById('actualProtein').textContent = actualProtein.toFixed(1);
            document.getElementById('actualProteinPct').textContent = actualProteinPct.toFixed(1);
            document.getElementById('proteinBar').style.width = `${actualProteinPct}%`;
            
            document.getElementById('targetFat').textContent = targetFat.toFixed(1);
            document.getElementById('targetFatPct').textContent = fatRatio;
            document.getElementById('actualFat').textContent = actualFat.toFixed(1);
            document.getElementById('actualFatPct').textContent = actualFatPct.toFixed(1);
            document.getElementById('fatBar').style.width = `${actualFatPct}%`;
            
            document.getElementById('targetCarb').textContent = targetCarb.toFixed(1);
            document.getElementById('targetCarbPct').textContent = carbRatio;
            document.getElementById('actualCarb').textContent = actualCarb.toFixed(1);
            document.getElementById('actualCarbPct').textContent = actualCarbPct.toFixed(1);
            document.getElementById('carbBar').style.width = `${actualCarbPct}%`;
            
            document.getElementById('summaryGrains').textContent = adjGrains;
            document.getElementById('summaryVege').textContent = adjVege;
            document.getElementById('summaryFruit').textContent = adjFruit;
            document.getElementById('summaryMeat').textContent = adjMeat;
            document.getElementById('summaryBean').textContent = adjBean;
            document.getElementById('summaryMilk').textContent = adjMilk;
            document.getElementById('summaryNut').textContent = adjNut;
            document.getElementById('summaryOil').textContent = adjOil;
        }
        
        // 生成图片预览
        function generateImagePreview() {
            const reportSection = document.getElementById('reportSection');
            
            // 添加加载提示
            reportImage.alt = '报告图片生成中...';
            
            html2canvas(reportSection, {
                scale: 2,
                logging: false,
                useCORS: true,
                allowTaint: true,
                backgroundColor: '#e8f4ff'
            }).then(canvas => {
                reportImage.src = canvas.toDataURL('image/png');
                reportImage.alt = '营养报告预览图';
                
                // 保存图片数据用于下载
                reportImage.dataset.imageData = canvas.toDataURL('image/png');
            }).catch(error => {
                console.error('图片生成失败:', error);
                alert('图片生成失败，请重试！');
                reportImage.alt = '图片生成失败';
            });
        }
        
        // 下载图片
        function downloadImage() {
            if (!reportImage.dataset.imageData) {
                alert('请先生成预览图片');
                return;
            }
            
            const link = document.createElement('a');
            const date = new Date();
            const dateString = date.getFullYear() + '-' + 
                              (date.getMonth() + 1).toString().padStart(2, '0') + '-' + 
                              date.getDate().toString().padStart(2, '0');
            
            link.href = reportImage.dataset.imageData;
            link.download = '营养报告_' + dateString + '.png';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }
    </script>
</body>
</html>
